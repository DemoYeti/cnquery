syntax = "proto3";
package cnquery.providers.v1;
option go_package = "go.mondoo.com/cnquery/providers-sdk/v1/plugin";

import "providers-sdk/v1/inventory/inventory.proto";
import "llx/llx.proto";

message ParseCLIReq {
  string connector = 1;
  repeated string args = 2;
  map<string,cnquery.llx.Primitive> flags = 3;
}

message ParseCLIRes {
  // full inventory of everything that was requested
  Inventory inventory = 1;
  uint32 connection = 2;
}

message ConnectReq {
  bytes features = 2;
  // Asset must be only one target asset
  Inventory asset = 3;
}

message ConnectRes {
  uint32 id = 1;
  string name = 2;
}

message DataReq {
  uint32 connection = 1;
  uint32 callback_server = 2;
  string resource = 3;
  string resource_id = 4;
  string field = 5; 
  map<string,cnquery.llx.Primitive> args = 6;
}

message DataRes {
  cnquery.llx.Primitive data = 1;
  string error = 2;
  // The ID uniquely identifies this request and all associated callbacks
  string id = 3;
}

message CollectRes {}

message StoreReq {
  uint32 connection = 1;
  repeated ResourceData resources = 2;
}

message ResourceData {
  string name = 3;
  string id = 4;
  map<string, cnquery.llx.Primitive> fields = 5;
}

message StoreRes {}

service ProviderPlugin {
  rpc ParseCLI(ParseCLIReq) returns (ParseCLIRes);
  rpc Connect(ConnectReq) returns (ConnectRes);
  rpc GetData(DataReq) returns (DataRes);
  rpc StoreData(StoreReq) returns (StoreRes);
}

service ProviderCallback {
  rpc Collect(DataRes) returns (CollectRes);
}
