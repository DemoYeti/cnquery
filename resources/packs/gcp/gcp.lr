option go_package = "go.mondoo.com/cnquery/resources/packs/gcp"

// GCP Cloud organization
gcloud.organization @defaults("id") {
  id() string
  name() string
  lifecycleState() string
  iamPolicy() []gcloud.resourcemanager.binding
}

// GCP Cloud Project
gcloud.project @defaults("id") {
  id() string
  name() string
  number() string
  lifecycleState() string
  createTime() time
  labels() map[string]string
  iamPolicy() []gcloud.resourcemanager.binding
}

// GCP Resource Manager Binding
gcloud.resourcemanager.binding {
  id string
  members []string
  role string
}

// GCP Compute
gcloud.compute {
  // displays all Google Compute Engine instances in a project
  instances() []gcloud.compute.instance
  //
  disks() []gcloud.compute.disk
}

// GCP Compute Instances
gcloud.compute.instance @defaults("id name") {
  id string
  name string
  cpuPlatform string
  deletionProtection bool
  description string
  hostname string
  labels map[string]string
  status string
  statusMessage string
  tags []string
  metadata map[string]string
  serviceAccounts []gcloud.compute.serviceaccount
}

// GCP Compute Service Account
gcloud.compute.serviceaccount @defaults("email") {
  email string
  scopes []string
}

// GCP Compute Persistent Disk
gcloud.compute.disk @defaults("id name") {
  id string
  name string
  // The architecture of the disk
  architecture string
  // Optional description
  description string
  // Labels to apply to this disk
  labels map[string]string
  // An opaque location hint
  locationHint string
  // Physical block size of the persistent disk
  physicalBlockSizeBytes int
  // Indicates how many IOPS to provision for the disk
  provisionedIops int
  // Size, in GB, of the persistent disk
  sizeGb int
  // The status of disk creation
  status string
  // GCP Compute Zone
  zone gcloud.compute.zone
}

gcloud.compute.zone {
  projectId string
  name string
}

// GCP Cloud Storage
gcloud.storage {
  // List all buckets
  buckets() []gcloud.storage.bucket
}

// GCP Cloud Storage Bucket
gcloud.storage.bucket @defaults("id") {
  id string
  name string
  labels map[string]string
  location string
  locationType string
  projectNumber string // TODO: project number / project id / project name
  storageClass string
  created time
  updated time
  iamPolicy() []gcloud.resourcemanager.binding
  iamConfiguration dict
}

// GCP Cloud SQL
gcloud.sql {
  instances() []gcloud.sql.instance
}

// GCP Cloud SQL Instance
gcloud.sql.instance @defaults("name") {
  name string
  backendType string
  connectionName string
  databaseVersion string
  gceZone string
  instanceType string
  kind string
  currentDiskSize int
  maxDiskSize int
  state string
  project string // TODO: should this be id or name
  region string
  serviceAccountEmailAddress string
  settings dict
}

gcloud.bigquery {
  datasets() []gcloud.bigquery.dataset
}

gcloud.bigquery.dataset @defaults("id"){
  id string
  projectId string
  description string
  location string
  labels map[string]string
  created time
  modified time
  tags map[string]string
  defaultEncryptionConfig dict
  tables() []gcloud.bigquery.table
  models() []gcloud.bigquery.model
  routines() []gcloud.bigquery.routine
}

private gcloud.bigquery.table @defaults("name") {
  name string
  location string
  description string
  fullQualifiedName string
  labels map[string]string
  useLegacySQL bool
  useStandardSQL bool
  requirePartitionFilter bool
  created time
  modified time
  numBytes int
  numLongTermBytes int
  numRows int
  type string
  expirationTime time
}

private gcloud.bigquery.model @defaults("id") {
  id string
  datasetId string
  projectId string
  name string
  location string
  description string
  fullQualifiedName string
  labels map[string]string
  created time
  modified time
  type string
  expirationTime time
}

private gcloud.bigquery.routine @defaults("id") {
  id string
  datasetId string
  projectId string
  language string
  description string
  created time
  modified time
  type string
}
